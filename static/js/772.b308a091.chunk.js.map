{"version":3,"file":"static/js/772.b308a091.chunk.js","mappings":"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","sources":["pages/modules/bitcoin-basics/promise/intro.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { OptionButton, ActionButton } from '../../../../components/ui';\nimport '../../../../components/ModuleCommon.css';\n\nexport default function PromiseIntro() {\n  const [currentDemo, setCurrentDemo] = useState(0);\n  const [userPredictions, setUserPredictions] = useState({});\n  const [challengeMode, setChallengeMode] = useState(true);\n  const [personalStory, setPersonalStory] = useState('');\n  const [thinkingLevel, setThinkingLevel] = useState(1);\n\n  // Streamlined problem demonstrations\n  const problemDemos = [\n    {\n      id: 'control',\n      title: 'Who Controls Your Money?',\n      setup: 'In February 2022, the Canadian government froze bank accounts of peaceful protesters...',\n      thinkingQuestion: \"If your money can be frozen for political reasons, do you really own it?\",\n      challengeOptions: [\n        'Yes, it\\'s still mine even if temporarily frozen',\n        'No, if it can be frozen, someone else controls it',\n        'It depends on the reason for freezing',\n        'I never thought about this before'\n      ],\n      reality: 'Over $7 million in accounts were frozen without court orders. Account holders couldn\\'t buy groceries or pay bills.',\n      deeperQuestion: \"What's the difference between 'having access to money' and 'owning money'?\"\n    },\n    {\n      id: 'inflation',\n      title: 'The Purchasing Power Problem',\n      setup: 'Your grandfather earned $5,000/year in 1970. That same job pays $50,000 today...',\n      thinkingQuestion: \"If wages went up 10x but a house costs 20x more, are we getting richer or poorer?\",\n      challengeOptions: [\n        'Richer - wages increased 10x',\n        'Poorer - things cost more than wage increases',\n        'Same - it all balances out',\n        'Hard to tell without more data'\n      ],\n      reality: 'Average home: $23,000 (1970) â†’ $400,000+ (2024). College: $400/year â†’ $25,000/year. Your money buys less every year.',\n      deeperQuestion: \"Is inflation a natural force like gravity, or is it a policy choice?\"\n    },\n    {\n      id: 'speed',\n      title: 'Digital Age, Stone Age Money',\n      setup: 'You can send a 4K video to Japan in 3 seconds. But sending $100 to Japan takes 3-5 business days...',\n      thinkingQuestion: \"In the internet age, why does it take longer to send money than to send a video?\",\n      challengeOptions: [\n        'Money is more complex than videos',\n        'Banking systems are old and slow',\n        'International regulations cause delays',\n        'Security requires more time'\n      ],\n      reality: 'Banks still use 1970s technology (SWIFT). Your money moves through 4-6 intermediaries, each taking 1-2 days.',\n      deeperQuestion: \"Why do we accept that money moves slower than information?\"\n    }\n  ];\n\n  const currentProblem = problemDemos[currentDemo];\n\n  const handleChallengeChoice = (choice) => {\n    setUserPredictions(prev => ({\n      ...prev,\n      [currentProblem.id]: choice\n    }));\n    setChallengeMode(false);\n    setThinkingLevel(1);\n  };\n\n  const handleDemoClick = () => {\n    if (thinkingLevel === 1) {\n      setThinkingLevel(2);\n    } else {\n      // Move to next demo or complete\n      if (currentDemo < problemDemos.length - 1) {\n        setCurrentDemo(currentDemo + 1);\n        setChallengeMode(true);\n        setThinkingLevel(1);\n      }\n    }\n  };\n\n  const handlePersonalStoryChange = (e) => {\n    setPersonalStory(e.target.value);\n  };\n\n  return (\n    <div className=\"step-content introduction\">\n      <div className=\"module-header-box\">\n        <h2>What Problems Does Bitcoin Solve?</h2>\n        <div className=\"intro-text\">\n          <p className=\"prime-text\">Before we explore Bitcoin, let's understand the problems with our current money system.</p>\n        </div>\n      </div>\n      \n      <div className=\"content-text\">\n        <div className=\"problem-exploration\">\n          <div className=\"problem-demo\">\n            <h3>{currentProblem.title}</h3>\n            <p className=\"setup-text\">{currentProblem.setup}</p>\n            \n            {challengeMode ? (\n              <div className=\"thinking-challenge\">\n                <div className=\"challenge-question\">\n                  <h4>ðŸ¤” Think First:</h4>\n                  <p>{currentProblem.thinkingQuestion}</p>\n                </div>\n\n                <div className=\"challenge-options\">\n                  {currentProblem.challengeOptions.map((option, index) => (\n                    <OptionButton\n                      key={index}\n                      className=\"challenge-option\"\n                      onClick={() => handleChallengeChoice(option)}\n                    >\n                      {option}\n                    </OptionButton>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"reality-reveal\">\n                <div className=\"user-prediction\">\n                  <h4>Your intuition: \"{userPredictions[currentProblem.id]}\"</h4>\n                </div>\n\n                <div className=\"reality-check\">\n                  <h4>ðŸ“Š The Reality:</h4>\n                  <p>{currentProblem.reality}</p>\n                </div>\n                \n                {thinkingLevel === 2 && (\n                  <div className=\"deeper-thinking\">\n                    <h4>ðŸ§  Deeper Question:</h4>\n                    <p>{currentProblem.deeperQuestion}</p>\n                    \n                    <div className=\"personal-reflection\">\n                      <h5>Your thoughts:</h5>\n                      <textarea\n                        value={personalStory}\n                        onChange={handlePersonalStoryChange}\n                        placeholder=\"How does this make you feel about money?\"\n                        className=\"reflection-input\"\n                      />\n                    </div>\n                  </div>\n                )}\n                \n                <ActionButton \n                  onClick={handleDemoClick}\n                  className=\"demo-next-button\"\n                >\n                  {thinkingLevel === 1 ? \"Reflect Deeper â†’\" : \n                   currentDemo < problemDemos.length - 1 ? \"Next Problem â†’\" : \"See Bitcoin's Solution â†’\"}\n                </ActionButton>\n              </div>\n            )}\n          </div>\n\n          <div className=\"progress-dots\">\n            {problemDemos.map((_, index) => (\n              <div \n                key={index} \n                className={`progress-dot ${index === currentDemo ? 'active' : ''} ${index < currentDemo ? 'completed' : ''}`}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["PromiseIntro","currentDemo","setCurrentDemo","useState","userPredictions","setUserPredictions","challengeMode","setChallengeMode","personalStory","setPersonalStory","thinkingLevel","setThinkingLevel","problemDemos","id","title","setup","thinkingQuestion","challengeOptions","reality","deeperQuestion","currentProblem","_jsxs","className","children","_jsx","map","option","index","OptionButton","onClick","handleChallengeChoice","choice","prev","_objectSpread","value","onChange","e","target","placeholder","ActionButton","handleDemoClick","length","_","concat"],"sourceRoot":""}